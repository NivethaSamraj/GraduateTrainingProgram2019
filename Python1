
1)
str1="10101010100111101"
cnt=0
for i in range(len(str1)-1):
    if str1[i]=='1' and str1[i+1]=='0' and str1[i+2]=='1':
        cnt+=1
print(cnt)

o/p:
5

2)

n = 3
a = [[3,8,7],[8,7,9],[1,6,0]]
diag1 = sum(a[i][i] for i in range(n))
diag2 = sum(a[i][n-i-1] for i in range(n))
print(diag1,diag2)


o/p:
10 15

3)


a = [[3,8,7],[8,7,9],[1,6,0]]
for i in range(0,3):
    for j in range(0,3):
        print(a[j][i],end="")
    print()




o/p:
381
876
790


4)

import re
str1=""
str2='abc'
cnt=0
for i in range(0,1112//3):
    str1+=str2
print(str1)
print(len(str1))
for i in range(len(str1)-1):
    if str1[i]=='c' and  str1[i+1]=='a':
        cnt+=1
print(cnt)







5)

str1="abcPQHa"
str=list(str1)
for i in range(len(str)):
    if str[i] >= 'a' and str[i] <= 'z':

        # Convert lowercase to uppercase
        str[i] = chr(ord(str[i]) - 32)

    elif str[i] >= 'A' and str[i] <= 'Z':

        # Convert lowercase to uppercase
        str[i] = chr(ord(str[i]) + 32)
print("".join(str))




7)

#Find the sum of multiples of 3 and 5 between 1 to 1000
sum=0
for i in range(1,1001):
    if i % 3 ==0 and i % 5 ==0:
        sum+=i
print(sum)
o/p:
33165
        


8)
 Display the phone number as below and also print the last 4 digit in ascending order

input : 9993452133

output :xxx-xxx-xxxx




inp = str(9993452133)
 str1 = ""
 f3 = inp[0:3]
 s3 = inp[3:6]
 l4 = sorted(inp[6:10])
 for i in l4:
     str1 += i
 print f3,'-',s3,'-',str1
 -












9) 

"There are 26 alphabets in English out of which 5 are vowels and 21 are consonants"

Count the sum of numbers in the above statement using regular expression




SOLUTION:

import re
String1=" There are 26 alphabets in English out of which 5 are vowels and 21 are consonants "
reg= re.findall(r'[0-9]+', String1)
for i in range(len(reg)):
    reg[i]=int(reg[i])
print(sum(reg))

O/p:

52






10) Anagram : sample inputs : tear, rate ;
Find if these words are anagram or not. Program should accept two inputs from user.


SOLUTION:


def isAnagram(str1,str2):
    return sorted(str1) == sorted(str2)

str1 = input("Enter the string 1 : ")
str2 = input("Enter the string 2 : ")


if isAnagram(str1,str2):
    print("Strings are anagram")
else:
    print("Strings are not anagram")


11)
With a given integral number n, change the program to generate a dictionary that contains (i, cube of i) such that is an integral number between 1 and n (both included).

and then the program should print the dictionary.

Suppose the following input is supplied to the program:

7

Then, the output should be:

{1: 1, 2: 8, 3: 27, 4: 64, 5: 125, 6: 216, 7: 373}

Take the input from the user via console.

 SOLUTION:


n=int(input("Enter the number n "))
dict1={}
for i in range(1,n+1):
    dict1[i]=i**3
print(dict1)


12: find if the below numbers are Armstrong number

 

a: 153

b:1634

c: 876


num = int(input("Enter a number: "))
sum = 0
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10

if num == sum:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")
   
Solution:
153
153 is an Armstrong number

1634
1634 is not an Armstrong number

876
876 is not an Armstrong number



