1.Create user defined exception for capturing image files which is .jpg, .jpeg, .png etc.,

 

Example:

Please enter file name: png_file_details.pdf

 

-----------------------------------------------------------------------------------------

SOLUTION:

class Myerror(Exception):
      def __init__(self,a):
            self.a=a
li=['jpg','png','jpeg','gif']
filename=input("Enter the filename along with extension")
splittedname=filename.split(".")[-1]
print(splittedname)
if splittedname in 
      try:
            raise Myerror("Extension not supported")
      except Myerror as e:
            print(e)
 
-------------------------------------------------------------------------------------------------
 

2.Create simple banking process using class and function

Example class/functions:

new_user

offer

debit_card_issue., etc

 


SOLUTION:

class Bank:
      def __init__(self, username, doj, inibalance,amount):
            self.username=username
            self.doj=doj
            self.inibalance=inibalance
            self.amount=amount

      def newuserregistration(self):
             print("The user registered",self.username)

      def deposit(self,amount=500):
            self.amount +=self.inibalance

      def withdraw(self,amount=500):
            if self.amount>self.inibalance:
                  print("Insufficient balance in the account")
      def checkbalance(self):
            return self.amount



customer1=Bank("John",'1st june',2000,500)
customer2=Bank("Shelly",'1st May',5000,500)
customer1.newuserregistration()
customer1.deposit()
customer1.withdraw()









-----------------------------------------------------------------------------------------

 

 

3.Create student information file (xlsx format) from database.

the table should contain 10 columns minimum

 

get the list of student's identity number input from the text file (.txt)


import mysqldb

conn=mysqldb.connect('localhost','username','password','st')
cursor=mysqldb.cursor()
output=cursor.execute("select * from studenttable")
output1=output.fetchall()
print(output1)


with open("Stud.txt","a") as file:
	writefile=csv.writer(file,delimiter=",")
	writer.writerow(output1)
 

-----------------------------------------------------------------------------------------

 

4.Read the IP Addresses from the file using regular expression

fh=open("Filewithaddress.txt",'r')
list1=[]
for i in fh:
	print(re.findall(r'[0-255]{1}[.][0-255]{1}[.][0-255]{1}[.][0-255]{1}',i))
    
	for j in ipvalues:
		list1.append(j)



fh1=open("ips.txt",'w')




	 
	

 

-----------------------------------------------------------------------------------------

 

5.Convert number to words range will be 9999

Example:

1000 - one thousand

1750 - one thousand seven hundred fifty

4881 - four thousand eight hundred eighty one



ones=['one','two','three','four','five',six','seven','eight','nine','ten','eleven'.'twelve','thirteen','fourteen','fifteen','sixteen','seventeen','eigteen','nineteen']
 
tens=['twenty','thirty','fourty','fifty','sixty','seventy','eighty','ninety']

hundreds=['hundred','thousand']

number=int(input("Enter the number"))

if 





-----------------------------------------------------------------------------------------

 

6.Text Wrapping by given column range

Example:

 

Hi, this is sample text. -- (sample text)

9 -- (column range)

 

output:

 

123456789

Hi, this -- (right text padding can have spaces)

is sample

text. -- (no space is allowed in left text padding)

 

------------------------------------------------------------------------------------------

 

7.Validate the given expression

input: {(([8+3)])*(1+2)])}

str1=input('enter the exp:')
li=[]
val=1
val1=1
list1=['{','(','[','}',')',']']
for i in str1:
	if i =="{":
		val=val+1
	elif i=="[":
		val1=val1+1
	elif i=="(":
		val2=val2+1
	elif i=="}":
		val=val-1
	elif i =="]":
		val1=val1-1
	elif i==")"
		val2=val2-1
	else:
		continue
if val==0 and val1==0 and val2==0:
	 print('valid expression')
else:
	print("invalid expression")
		











 

----------------------------------------------------------------------------
