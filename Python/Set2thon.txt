1)
The greatest common divisor (GCD) of a and b is the largest number that divides both of them with no remainder. 
One way to find the GCD of two numbers is based on the observation that if r is the remainder when a is divided by b, 
then gcd(a, b) = gcd(b, r). As a base case, we can use gcd(a, 0) = a. 
Write a function called gcd that takes parameters a and b and returns their greatest common divisor.

def gcd(a,b):
    if(b==0):
        return a
    else:
        return gcd(b,a%b)
a=int(input("Enter first number:"))
b=int(input("Enter second number:"))
n=gcd(a,b)
print("GCD is: ")
print(n)


3)Observe the following function definitions. 
They Calculate the Factorial as per the Mathematical definition 1! = 1 (n + 1)! = (n + 1) * n!
Implement factI(n) as an Iterative Implementation & factR(n) as a Recursive Implementation

def factI(n):
	"""Assumes that n is an int > 0
	Returns n!
	Uses Iterative Implementation"""
	
def factR(n):
	"""Assumes that n is an int > 0
	Returns n!
	Uses Recursive Implementation"""




number1=int(input('enter a number'))
f=1
for i in range(1,number1+1):
  f=f*i
print ('factorial of', number1, '=',f)


def recur_factorial(n):  
   if n == 1:  
       return n  
   else:  
       return n*recur_factorial(n-1)  

num = int(input("Enter a number: "))  

if num < 0:  
   print("Type a positive number")
elif num == 0:  
   print("The factorial of 0 is 1")  
else:  
   print("The factorial of",num,"is",recur_factorial(num)) 


4)Write a program that computes the decimal equivalent of the binary number 10011?


def binaryToDecimal(binary):
    binary1 = binary
    decimal, i, n = 0, 0, 0
    while (binary != 0):
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary // 10
        i += 1
    print(decimal)

binaryToDecimal(10011)


7)
A palindrome is a word that is spelled the same backward and forward,
 like "Malayalam" and "Noon" . Recursively, a word is a palindrome if the 
first and last letters are the same and the middle is a palindrome.
 Write a function called is_palindrome that takes a string argument and returns 
True if it is a palindrome and False otherwise. Remember that you can use the built-in 
function len to check the length of a string.
Use the function definition
def isPalindrome(s):
	"""Assumes s is a str
	Returns True if s is a palindrome; False otherwise.
	Punctuation marks, blanks, and capitalization are
	ignored."""





def isPalindrome(s):
   
    rev = ''.join(reversed(s))

 
    if (s == rev):
        return True
    return False



s = input("Enter a string")
ans = isPalindrome(s)

if (ans):
    print("Yes")
else:
    print("No")




(OR)
x = "malayalam"
w = ""
for i in x:
    w = i + w
    if (x == w):
        print("YES") 


8)






9)